pipeline {
    agent any
    tools {
        jdk 'java8'
        maven 'maven3'
    }
    stages {
        stage ("Clone") {
            steps {
                git 'https://github.com/kiran064/game-of-life.git'
            }
        }
        stage ("Build") {
            steps {
                sh "mvn clean install -DskipTests"
            }
            post {
                success {
                    archiveArtifacts artifacts: '**/target/*.war'
                }
            }
        }
        stage ("Unit test") {
            steps {
                stash includes: 'gameoflife-web/target/*.war', name: 'project'
                sh "mvn test"
            }
        }
        stage('Sonar Analysis') {
            environment {
                scannerHome = tool 'sonar4.7'
            }
            steps {
               withSonarQubeEnv('sonar') {
                   sh '''${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=devops-test \
                   -Dsonar.projectName=devops-test \
                   -Dsonar.projectVersion=1.0 \
                   -Dsonar.sources=gameoflife-web/src/ \
                   -Dsonar.java.binaries=gameoflife-web/target/test-classes/com/wakaleo/gameoflife/webtests/controllers/ \
                   -Dsonar.junit.reportsPath=gameoflife-web/target/surefire-reports/ \
                   -Dsonar.jacoco.reportsPath=gameoflife-web/target/jacoco.exec \
                   -Dsonar.java.checkstyle.reportPaths=gameoflife-web/target/checkstyle-result.xml'''
                }
            }
        }
        stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
                    // true = set pipeline to UNSTABLE, false = don't
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        stage ('parll') {
            parallel {
                stage ("upload artifact") {
                    steps {
                        nexusArtifactUploader(
                           nexusVersion: 'nexus3',
                           protocol: 'http',
                           nexusUrl: '3.109.47.75:8081',
                           groupId: 'Qa',
                           version: "${env.BUILD_ID}",
                           repository: 'dev',
                           credentialsId: 'Nexus',
                           artifacts: [
                                   [artifactId: 'gameoflife',
                                   classifier: '',
                                   file: 'gameoflife-web/target/gameoflife.war',
                                   type: 'war']
                           ]
                       )
                   }
                }
                stage ("P for deploy") {
                    agent {
                        label { label "ansible" }
                    }
                    steps {
                        unstash "project"
                        writeFile file: 'docker-compose.yaml', text: '''version: "3"
services:
  web1:
    image: "tomcat:8.5-jre8-temurin-focal"
    ports:
      - "80:8080"
    volumes:
      - ./gameoflife-web/target/:/usr/local/tomcat/webapps/'''
                        writeFile file: 'test.yaml', text: '''- 
      name: install docker
      hosts: project
      become: yes
      tasks:
        - name: docker installing
          yum:
            name: docker
            state: present
        - service:
            name: docker
            state: started
        - shell: |
            curl -SL https://github.com/docker/compose/releases/download/v2.15.1/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
            chmod +x /usr/local/bin
            ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
            chmod +x /usr/bin/docker-compose
            docker-compose down
            docker system prune -af
            rm -rf *
        - copy:
            src: docker-compose.yaml
            dest: docker-compose.yaml
        - copy:
            src: gameoflife-web
            dest: .
            owner: ansible
            group: ansible 
            mode: 0644
        - shell: |
            docker-compose up -d'''
                    }
                }
            }
        }
    }
}