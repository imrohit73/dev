pipeline {
    agent any
    tools {
        jdk 'java8'
        maven 'maven3'
    }
    stages {
        stage ("Clone") {
            steps {
                git 'https://github.com/kiran064/game-of-life.git'
            }
        }
        stage ("Build") {
            steps {
                sh "mvn clean install -DskipTests"
            }
            post {
                success {
                    archiveArtifacts artifacts: '**/target/*.war'
                }
            }
        }
        stage ("Unit test") {
            steps {
                sh "mvn test"
            }
        }
        stage('Sonar Analysis') {
            environment {
                scannerHome = tool 'sonar4.7'
            }
            steps {
               withSonarQubeEnv('sonar') {
                   sh '''${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=game \
                   -Dsonar.projectName=game \
                   -Dsonar.projectVersion=1.0 \
                   -Dsonar.sources=gameoflife-web/src/ \
                   -Dsonar.java.binaries=gameoflife-web/target/test-classes/com/wakaleo/gameoflife/webtests/controllers/ \
                   -Dsonar.junit.reportsPath=gameoflife-web/target/surefire-reports/ \
                   -Dsonar.jacoco.reportsPath=gameoflife-web/target/jacoco.exec \
                   -Dsonar.java.checkstyle.reportPaths=gameoflife-web/target/checkstyle-result.xml'''
                }
            }
        }
        stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
                    // true = set pipeline to UNSTABLE, false = don't
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        stage ("upload") {
            steps {
                 nexusArtifactUploader(
                    nexusVersion: 'nexus3',
                    protocol: 'http',
                    nexusUrl: '15.206.170.54:8081',
                    groupId: 'Qa',
                    version: "${env.BUILD_ID}",
                    repository: 'Game',
                    credentialsId: 'Nexus',
                    artifacts: [
                            [artifactId: gameoflife,
                            classifier: '',
                            file: 'gameoflife-web/target/gameoflife.war',
                            type: 'war']
                    ]
                )
            }
        }
    }
}